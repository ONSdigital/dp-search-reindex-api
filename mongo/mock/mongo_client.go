// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	dpMongoHealth "github.com/ONSdigital/dp-mongodb/health"
	"github.com/ONSdigital/dp-search-reindex-api/mongo"
	"github.com/globalsign/mgo"
	"sync"
)

// Ensure, that MongoClientMock does implement mongo.MongoClient.
// If this is not the case, regenerate this file with moq.
var _ mongo.MongoClient = &MongoClientMock{}

// MongoClientMock is a mock implementation of mongo.MongoClient.
//
// 	func TestSomethingThatUsesMongoClient(t *testing.T) {
//
// 		// make and configure a mocked mongo.MongoClient
// 		mockedMongoClient := &MongoClientMock{
// 			GetMongoClientFunc: func(db *mgo.Session, clientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection) *dpMongoHealth.Client {
// 				panic("mock out the GetMongoClient method")
// 			},
// 		}
//
// 		// use mockedMongoClient in code that requires mongo.MongoClient
// 		// and then make assertions.
//
// 	}
type MongoClientMock struct {
	// GetMongoClientFunc mocks the GetMongoClient method.
	GetMongoClientFunc func(db *mgo.Session, clientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection) *dpMongoHealth.Client

	// calls tracks calls to the methods.
	calls struct {
		// GetMongoClient holds details about calls to the GetMongoClient method.
		GetMongoClient []struct {
			// Db is the db argument value.
			Db *mgo.Session
			// ClientDatabaseCollection is the clientDatabaseCollection argument value.
			ClientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection
		}
	}
	lockGetMongoClient sync.RWMutex
}

// GetMongoClient calls GetMongoClientFunc.
func (mock *MongoClientMock) GetMongoClient(db *mgo.Session, clientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection) *dpMongoHealth.Client {
	if mock.GetMongoClientFunc == nil {
		panic("MongoClientMock.GetMongoClientFunc: method is nil but MongoClient.GetMongoClient was just called")
	}
	callInfo := struct {
		Db                       *mgo.Session
		ClientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection
	}{
		Db:                       db,
		ClientDatabaseCollection: clientDatabaseCollection,
	}
	mock.lockGetMongoClient.Lock()
	mock.calls.GetMongoClient = append(mock.calls.GetMongoClient, callInfo)
	mock.lockGetMongoClient.Unlock()
	return mock.GetMongoClientFunc(db, clientDatabaseCollection)
}

// GetMongoClientCalls gets all the calls that were made to GetMongoClient.
// Check the length with:
//     len(mockedMongoClient.GetMongoClientCalls())
func (mock *MongoClientMock) GetMongoClientCalls() []struct {
	Db                       *mgo.Session
	ClientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection
} {
	var calls []struct {
		Db                       *mgo.Session
		ClientDatabaseCollection map[dpMongoHealth.Database][]dpMongoHealth.Collection
	}
	mock.lockGetMongoClient.RLock()
	calls = mock.calls.GetMongoClient
	mock.lockGetMongoClient.RUnlock()
	return calls
}
