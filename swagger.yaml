swagger: "2.0"

info:
  title: dp-search-reindex-api
  description: "Provides details about search reindex jobs and enables creation and running of them."
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"

basePath: "/v1"

schemes:
  - http

tags:
  - name: "Public"

paths:

  /jobs/{id}:
    get:
      tags:
        - "Public"
      summary: Get a specific job.
      description: "Get the specific search reindex job that has the id given in the path."
      parameters:
        - $ref: '#/parameters/id'
      produces:
        - application/json
      responses:
        200:
          description: "Successfully returned a job for the given id."
          schema:
            $ref: "#/definitions/Job"
        500:
          $ref: '#/responses/InternalError'
        404:
          $ref: '#/responses/ResourceNotFound'

  /jobs:
    get:
      tags:
        - "Public"
      summary: Get a list of jobs.
      description: "Get a list of search reindex jobs that meet the criteria specified by the four query parameters."
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/state'
      produces:
        - application/json
      responses:
        200:
          description: "Successfully returned the requested list of jobs."
          schema:
            $ref: "#/definitions/Jobs"
        400:
          $ref: '#/responses/InvalidRequest'
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
        - "Public"
      summary: Create a new search reindex job.
      description: "Post details of a new search reindex job and receive the new Job resource created in response."
      parameters:
        - $ref: '#/parameters/job'
      produces:
        - application/json
      responses:
        201:
          description: "Successfully created a new search reindex job."
          schema:
            $ref: "#/definitions/Job"
        400:
          $ref: '#/responses/InvalidRequest'
        500:
          $ref: '#/responses/InternalError'

responses:

  InternalError:
    description: "Failed to process the request due to an internal error"

  ResourceNotFound:
    description: "Failed to locate a Job that has the specified id"

  InvalidRequest:
    description: "The request does not contain the correct parameters and/or values in its parameters"

definitions:

  Job:
    type: object
    description: "A search reindex job. The information it contains is to be used by the developer who creates the Job, which is to replace an existing elastic search index with a new one."
    required:
      - "id"
      - "last_updated"
      - "links"
      - "search_index_name"
      - "state"
    properties:
      id:
        type: string
        description: "A unique identifier for this specific search reindex job."
      last_updated:
        type: string
        format: date-time
        description: "A ISO8601 timestamp representing the last time the resource was updated."
      links:
        type: object
        description: "Links that can be used to get the details of the Job (self) or of its tasks."
        required:
          - "tasks"
          - "self"
        properties:
          tasks:
            type: string
            format: http://localhost:<port>/jobs/{id}/tasks
            example: http://localhost:12150/jobs/abc123/tasks
          self:
            type: string
            format: http://localhost:<port>/jobs/{id}
            example: http://localhost:12150/jobs/abc123
      number_of_tasks:
        type: integer
        description: "The number of tasks that are part of this search reindex job."
      reindex_completed:
        type: string
        format: date-time
        description: "A ISO8601 timestamp representing the date and time when the reindex job was completed."
      reindex_failed:
        type: string
        format: date-time
        description: "A ISO8601 timestamp representing the date and time when the reindex job failed."
      reindex_started:
        type: string
        format: date-time
        description: "A ISO8601 timestamp representing the date and time when the reindex job was started."
      search_index_name:
        type: string
        description: "The name of the search index to be recreated by this search reindex job."
      state:
        type: string
        description: "The current state of this search reindex job."
        enum:
          - created
          - in-progress
          - completed
          - failed
      total_search_documents:
        type: integer
        description: "The total number of documents that are held within the search index in question."

  NewJob:
    type: object
    description: "A new search reindex job. The NewJob is exactly the same as a Job but is used by the POST /jobs endpoint; this creates the Job (defined by the NewJob) and generates the id and links for it."
    required:
      - "last_updated"
      - "search_index_name"
      - "state"
    properties:
      last_updated:
        type: string
        format: date
        description: "A ISO8601 timestamp representing the last time the resource was updated."
      number_of_tasks:
        type: integer
        description: "The number of tasks that are part of this search reindex job."
      reindex_completed:
        type: string
        format: date
        description: "A ISO8601 timestamp representing the date and time when the reindex job was completed."
      reindex_failed:
        type: string
        format: date
        description: "A ISO8601 timestamp representing the date and time when the reindex job failed."
      reindex_started:
        type: string
        format: date
        description: "A ISO8601 timestamp representing the date and time when the reindex job was started."
      search_index_name:
        type: string
        description: "The name of the search index to be recreated by this search reindex job."
      state:
        type: string
        description: "The current state of this search reindex job."
        enum:
          - created
          - in-progress
          - completed
          - failed
      total_search_documents:
        type: integer
        description: "The total number of documents that are held within the search index in question."

  Jobs:
    type: object
    description: "A list of Job resources held in an array."
    required:
      - "count"
      - "items"
      - "limit"
      - "offset"
      - "total_count"
    properties:
      count:
        type: integer
        description: "The number of Job resources in the list."
      items:
        type: array
        description: "The actual list that contains the Job resources."
        items:
          $ref: '#/definitions/Job'
      limit:
        type: integer
        description: "The max number of Job resources we're returning in this response. The default is 20."
      offset:
        type: integer
        description: "The number of Job resources into the full list that this particular response is starting at. The default is 0."
      total_count:
        type: integer
        description: "How many total items there may be (so the full list size, maybe thousands)."
      sort:
        type: integer

parameters:

  id:
    name: id
    description: The id of a search reindex job (Job.id)
    in: path
    required: true
    type: string

  limit:
    name: limit
    description: The maximum number of Job resources we're returning in this Jobs resource. The default limit is 20.
    in: query
    type: integer
    default: 20

  offset:
    name: offset
    description: The number of Job objects into the full list that this particular response is starting at. The default number to start at is 0.
    in: query
    type: integer
    default: 0

  sort:
    name: sort
    description: Sort on last_updated field
    in: query
    type: boolean

  state:
    name: state
    description: Filter option to bring back specific Job objects according to their state
    in: query
    type: string
    enum:
      - created
      - in-progress
      - completed
      - failed
  
  job:
    name: job
    description: Details of a Job object, to POST, without id and links as these are generated by the application
    in: body
    required: true
    schema:
      $ref: '#/definitions/NewJob'

